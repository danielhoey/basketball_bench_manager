#game-controller.mx-auto.text-center.py-2.px-4.max-w-sm
  h1 Game - #{@game.created_at.strftime('%d %b %y')}

  #game_app.py-2
    .error.text-red-700.text-center.mt-2(v-if="error") {{ error }}

    .timer.mt-2
      h2 Timer

      .clock.mt-1.text-lg
        input.w-8.text-center(v-model="digits[0]")
        input.w-8.text-center(v-model="digits[1]")
        span
          | :
        input.w-8.text-center(v-model="digits[2]")
        input.w-8.text-center(v-model="digits[3]")

      .actions.mt-2
        template(v-if="timeoutID")
          button.border.p-1.rounded-lg.mr-1.text-white.bg-gray-400(disabled) Start
          button.border.p-1.rounded-lg.mr-1.text-white.bg-blue-600(@click="pause()") Pause
        template(v-else)
          button.border.p-1.rounded-lg.mr-1.text-white.bg-blue-600(@click="start()") Start
          button.border.p-1.rounded-lg.mr-1.text-white.bg-gray-400(disabled) Pause
        //button.border.p-1.rounded-lg.mr-1.text-white.bg-gray-500 Adjust

    hr.mt-8

    .substitutions.mt-6
      h2 Substitutions
      .sub.cursor-pointer(v-for="(sub,i) in substitutions" @click="selectSubstitution(i)")
        .mt-1.p-1(:class="{selected: isSelectedSub(i)}")
          .flex.flex-nowrap.justify-center
            .w-36.border.rounded-lg.p-2.text-blue-700
              span(v-if="sub[0]")= "{{sub[0].name}} \#{{sub[0].number}}"
              span.italic(v-else) Select
            img.w-12(src="#{vite_asset_url('images/swap.svg')}")
            .w-36.border.rounded-lg.p-2.text-orange-700
              span(v-if="sub[1]")= "{{sub[1].name}} \#{{sub[1].number}}"
              span.italic(v-else) Select
          .mt-1(v-if="isSelectedSub(i)")
            button.align-middle
              .svg-icon.px-1.bg-green-700.align-middle.hover:bg-green-600(@click="accept" style="maskImage: url(#{vite_asset_url('images/check.svg')})")
            button.align-middle
              .svg-icon.px-1.bg-red-600.align-middle.hover:bg-red-500(@click.stop="remove" style="maskImage: url(#{vite_asset_url('images/delete.svg')})")
      .mt-2(v-if="hasAnySubstitutions() && selectedSub == null")
        button.border.p-1.rounded-lg.mr-1.text-white.bg-blue-600(@click="applySubstitutions") Execute

    hr.mt-8

    .on-court.mt-6
      h2.text-blue-700 Court
      .border-2.border-blue-700.rounded-lg.mx-auto
        table.players.table-auto.w-full
          thead
            tr
              th.px-2.text-left Player
              th.px-1.text-left #
              th.px-1.text-center Bench Mins
          tr(v-for="p in court" :key="p.id")
            td.px-2.py-1.text-left.cursor-pointer(@click="selectOnCourt(p)" :class="{disabled: assignedToSubstitution(p)}")= "{{p.name}}"
            td.px-1.text-left= "{{p.number}}"
            td.px-1.text-center= "{{formatTime(p.benchTime)}}"

    hr.mt-8

    .on-bench.mt-6
      h2.text-orange-700 Bench
      .border-2.border-orange-700.rounded-lg.mx-auto
        table.players.table-auto.w-full
          thead
            tr
              th.px-2.text-left Player
              th.px-1.text-left #
              th.px-1.text-center Bench Mins
          tr(v-for="p in bench" :key="p.id")
            td.px-2.py-1.text-left.cursor-pointer(@click="selectOnBench(p)" :class="{disabled: assignedToSubstitution(p)}")= "{{p.name}}"
            td.px-1.text-left= "{{p.number}}"
            td.px-1.text-center= "{{formatTime(p.benchTime)}}"
          tr(v-if="selectingUnavailable")
            td.px-2.py-1.text-gray-700.italic(colspan="3") Select unavailable players

    .unavailable.mt-6
      h2.text-gray-700 Unavailable
      .border-2.border-gray-700.rounded-lg.mx-auto
        table.players.table-auto.w-full
          thead
            tr
              th.px-2.text-left Player
              th.px-1.text-left #
              th.px-1.text-center Bench Mins
          tr(v-for="p in unavailable" :key="p.id")
            td.px-2.py-1.text-left.cursor-pointer(@click="addToBench(p)" :class="{disabled: assignedToSubstitution(p)}")= "{{p.name}}"
            td.px-1.text-left= "{{p.number}}"
            td.px-1.text-center= "{{formatTime(p.benchTime)}}"
          tr
            td.px-2.py-1.cursor-pointer(@click="toggleUnavailable()" colspan="3")
              button.border.p-1.rounded-lg.mr-1.text-white.bg-gray-400= "{{ selectingUnavailable ? 'Finish' : 'Select' }}"


javascript:
  window.onload = () => {
      vueApps.GameController(#{@game.id}, #{@players.to_json.html_safe}, #{@player_times.to_json.html_safe}, #{@last_snapshot.to_json.html_safe}).mount("#game_app");
      #{Rails.env == 'development' ? 'basketballBenchManagerTests();' : ''}
  }