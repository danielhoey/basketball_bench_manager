#timeline.mx-auto.text-center.py-2.px-4.max-w-sm
  h1 Game - #{@game.created_at.strftime('%d %b %y')}

  #app.py-2
    .error.text-red-700.text-center.mt-2(v-if="error") {{ error }}

    .events-ui(v-if="!substitution_being_edited")
      .events.mt-4.flex-col(v-for="e in events")
        .event.flex.items-center
          .time.w-16.text-left.text-gray-600.text-sm.pt-1= "{{ e.time }}"
          .details.flex-1
            .border.border-blue-700.rounded-lg.p-2.ml-2.text-blue-700(v-if="e.start") Game Start
            .border.border-green-700.rounded-lg.p-3.ml-2(v-if="e.substitution")
              <substitution :substitution="e.substitution"></substitution>
            .border-t.border-purple-700.ml-2.p-1.text-purple-700(v-if="e.timeout") Timeout start
            .border-b.border-purple-700.ml-2.p-1.text-purple-700(v-if="e.restart") Timeout end
            .border.border-red-700.rounded-lg.p-3.ml-2.text-red-700(v-if="e.end") Game End

      .actions.mt-4.flex.justify-center
        .time.w-24.text-gray-600.text-sm.pt-1= "{{ time }}"
        .flex.justify-center(v-if="!started")
          button.border.p-1.rounded-lg.mr-1.text-blue-700 Start Game
        .flex.justify-center.gap-2(v-if="started")
          button.block.border.p-1.rounded-lg.mr-1.text-white.bg-green-700(@click="createSubstitution") Substitution
          button.block.border.p-1.rounded-lg.mr-1.text-white.bg-purple-700 Timeout

    .substitution-ui.mt-4.border.border-green-700.rounded-lg.p-2.ml-2(v-if="substitution_being_edited")
      <substitution-selector :substitution="substitution_being_edited"></substitution-selector>

template#substitution
  .text-green-700 Substitution
  .columns-2.mt-2
    .flex-col.gap-2
      .player.text-blue-700(v-for="p in substitution.in")= "{{ p.name }}"
    .flex-col.gap-2
      .player.text-orange-700(v-for="p in substitution.out")= "{{ p.name }}"

template#substitution-selector
  <substitution :substitution="substitution"></substitution>
  .on-court.mt-6
    h2.text-blue-700 Court
    .border.border-blue-700.rounded-lg.mx-auto
      table.players.table-auto.w-full
        thead
          tr
            th.px-2.text-left Player
            th.px-1.text-center Bench Mins
        tr(v-for="p in court" :key="p.id")
          td.px-2.py-1.text-left.cursor-pointer(@click="selectOnCourt(p)" :class="{disabled: isSelected(p)}")= "{{p.name}}"
          td.px-1.text-center= "{{formatTime(p.benchTime)}}"

  .on-bench.mt-6
    h2.text-orange-700 Bench
    .border.border-orange-700.rounded-lg.mx-auto
      table.players.table-auto.w-full
        thead
          tr
            th.px-2.text-left Player
            th.px-1.text-center Bench Mins
        tr(v-for="p in bench" :key="p.id")
          td.px-2.py-1.text-left.cursor-pointer(@click="selectOnBench(p)" :class="{disabled: isSelected(p)}")= "{{p.name}}"
          td.px-1.text-center= "{{formatTime(p.benchTime)}}"
        tr(v-if="selectingUnavailable")
          td.px-2.py-1.text-gray-700.italic(colspan="3") Select unavailable players

  .unavailable.mt-6
    h2.text-gray-700 Unavailable
    .border.border-gray-700.rounded-lg.mx-auto
      table.players.table-auto.w-full
        thead
          tr
            th.px-2.text-left Player
            th.px-1.text-center Bench Mins
        tr(v-for="p in unavailable" :key="p.id")
          td.px-2.py-1.text-left.cursor-pointer(@click="addToBench(p)")= "{{p.name}}"
          td.px-1.text-center= "{{formatTime(p.benchTime)}}"
        tr
          td.px-2.py-1.cursor-pointer(@click="toggleUnavailable()" colspan="3")
            button.border.p-1.rounded-lg.mr-1.text-white.bg-gray-400= "{{ selectingUnavailable ? 'Finish' : 'Select' }}"



javascript:
  window.onload = () => {
    const events = [
      {time: '20:00', start: true},
      {time: '17:15', substitution: {in: [{name: 'Cormac'},{name: 'Luca'}], out: [{name: 'John'},{name: 'Jane'}]}},
      {time: '15:00', timeout: true},
      {time: '14:00', restart: true},
      {time: '14:01', substitution: {in: [{name: 'Zander'},{name: 'Flynn'},{name: 'Leroy'}, {name: 'Dylan'}, {name: 'Kieran'}],
                                     out: [{name: 'Cormac'},{name: 'Luca'}, {name: 'Zac'}, {name: 'Ian'}, {name: 'Eoghan'}]}}
    ]
    vueApps.Timeline(#{@game.id}, #{@players.to_json.html_safe}, events).mount("#app");
    #{Rails.env == 'development' ? 'basketballBenchManagerTests();' : ''}
  }